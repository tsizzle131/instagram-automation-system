{"ast":null,"code":"var _jsxFileName = \"/Users/tristanwaite/Desktop/code/instaram bot ateempt pt 2/instagram-automation/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\n// API base URL\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:8001/api';\nfunction App() {\n  _s();\n  var _devices$taskResult$d;\n  // State\n  const [status, setStatus] = useState('loading');\n  const [devices, setDevices] = useState({});\n  const [servers, setServers] = useState({});\n  const [tasks, setTasks] = useState({});\n  const [expandedServers, setExpandedServers] = useState({});\n  const [newDevice, setNewDevice] = useState({\n    name: '',\n    udid: '',\n    platformName: 'iOS',\n    platformVersion: '',\n    deviceName: '',\n    automationName: 'XCUITest'\n  });\n  const [newServer, setNewServer] = useState({\n    name: '',\n    host: '127.0.0.1',\n    port: '',\n    max_devices: 5\n  });\n  const [isAddingDevice, setIsAddingDevice] = useState(false);\n  const [isAddingServer, setIsAddingServer] = useState(false);\n  const [error, setError] = useState(null);\n  const [taskResult, setTaskResult] = useState(null);\n  const [selectedTask, setSelectedTask] = useState('go_to_profile');\n  const [taskInterval, setTaskInterval] = useState('');\n\n  // Fetch system status when component mounts\n  useEffect(() => {\n    fetchStatus();\n    // Poll status every 5 seconds\n    const interval = setInterval(() => {\n      fetchStatus();\n    }, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Toggle server expansion\n  const toggleServerExpansion = serverId => {\n    setExpandedServers(prev => ({\n      ...prev,\n      [serverId]: !prev[serverId]\n    }));\n  };\n\n  // Get devices assigned to a specific server\n  const getDevicesForServer = serverId => {\n    return Object.entries(devices).filter(([_, deviceInfo]) => deviceInfo.server === serverId);\n  };\n\n  // Fetch the status from the API\n  const fetchStatus = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/status`);\n      setStatus(response.data.status);\n      setDevices(response.data.devices || {});\n      setServers(response.data.servers || {});\n      setTasks(response.data.tasks || {});\n      setError(null);\n    } catch (err) {\n      setError(`Error fetching status: ${err.message}`);\n      console.error('Error fetching status:', err);\n    }\n  };\n\n  // Initialize the system\n  const initializeSystem = async () => {\n    try {\n      setStatus('initializing');\n      await axios.post(`${API_BASE_URL}/initialize`);\n      await fetchStatus();\n    } catch (err) {\n      setError(`Error initializing system: ${err.message}`);\n      console.error('Error initializing system:', err);\n    }\n  };\n\n  // Initialize a device\n  const initializeDevice = async deviceId => {\n    try {\n      await axios.post(`${API_BASE_URL}/devices/${deviceId}/initialize`);\n      await fetchStatus();\n    } catch (err) {\n      setError(`Error initializing device: ${err.message}`);\n      console.error('Error initializing device:', err);\n    }\n  };\n\n  // Refresh devices - scan for new devices and initialize them\n  const refreshDevices = async () => {\n    try {\n      setError(null);\n      const response = await axios.post(`${API_BASE_URL}/refresh`);\n      if (response.data.success) {\n        // Show a temporary success message\n        setError(`${response.data.message} (${response.data.detected_devices_count} devices detected)`);\n\n        // Refresh the dashboard\n        await fetchStatus();\n      } else {\n        setError(`Error refreshing devices: ${response.data.error || response.data.message}`);\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(`Error refreshing devices: ${((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || err.message}`);\n      console.error('Error refreshing devices:', err);\n    }\n  };\n\n  // Add a new device\n  const addDevice = async e => {\n    e.preventDefault();\n    try {\n      await axios.post(`${API_BASE_URL}/devices`, newDevice);\n      setIsAddingDevice(false);\n      setNewDevice({\n        name: '',\n        udid: '',\n        platformName: 'iOS',\n        platformVersion: '',\n        deviceName: '',\n        automationName: 'XCUITest'\n      });\n      await fetchStatus();\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(`Error adding device: ${((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || err.message}`);\n      console.error('Error adding device:', err);\n    }\n  };\n\n  // Add a new server\n  const addServer = async e => {\n    e.preventDefault();\n    try {\n      await axios.post(`${API_BASE_URL}/servers`, {\n        ...newServer,\n        port: parseInt(newServer.port, 10),\n        max_devices: parseInt(newServer.max_devices, 10)\n      });\n      setIsAddingServer(false);\n      setNewServer({\n        name: '',\n        host: '127.0.0.1',\n        port: '',\n        max_devices: 5\n      });\n      await fetchStatus();\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      setError(`Error adding server: ${((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.error) || err.message}`);\n      console.error('Error adding server:', err);\n    }\n  };\n\n  // Execute a task on a device\n  const executeTask = async deviceId => {\n    try {\n      setTaskResult(null);\n      const payload = {\n        task_name: selectedTask\n      };\n\n      // Add repeat interval if provided\n      if (taskInterval && !isNaN(taskInterval) && parseInt(taskInterval) > 0) {\n        payload.repeat_interval = parseInt(taskInterval);\n      }\n      const response = await axios.post(`${API_BASE_URL}/devices/${deviceId}/task`, payload);\n      setTaskResult({\n        device: deviceId,\n        task: selectedTask,\n        result: response.data\n      });\n      await fetchStatus();\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      setError(`Error executing task: ${((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.error) || err.message}`);\n      console.error('Error executing task:', err);\n    }\n  };\n\n  // Stop a scheduled task\n  const stopTask = async (deviceId, taskName) => {\n    try {\n      await axios.post(`${API_BASE_URL}/devices/${deviceId}/task/${taskName}/stop`);\n      await fetchStatus();\n    } catch (err) {\n      var _err$response5, _err$response5$data;\n      setError(`Error stopping task: ${((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : _err$response5$data.error) || err.message}`);\n      console.error('Error stopping task:', err);\n    }\n  };\n\n  // Handle form input changes for new device\n  const handleDeviceInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewDevice(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Handle form input changes for new server\n  const handleServerInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewServer(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Format time duration\n  const formatDuration = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = Math.floor(seconds % 60);\n    return `${minutes}m ${remainingSeconds}s`;\n  };\n\n  // Get server info for a device\n  const getServerForDevice = deviceInfo => {\n    const serverId = deviceInfo.server;\n    return servers[serverId] || null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Instagram Automation Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `status-indicator status-${status}`,\n        children: [\"Status: \", status === 'running' ? 'Running' : status === 'loading' ? 'Loading...' : 'Not Initialized']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-banner\",\n      children: [error, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setError(null),\n        children: \"Dismiss\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Appium Servers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), !isAddingServer ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsAddingServer(true),\n            className: \"add-button\",\n            children: \"Add Server\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsAddingServer(false),\n            className: \"cancel-button\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), isAddingServer ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Add New Appium Server\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: addServer,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"name\",\n                value: newServer.name,\n                onChange: handleServerInputChange,\n                placeholder: \"server-3\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Host:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"host\",\n                value: newServer.host,\n                onChange: handleServerInputChange,\n                placeholder: \"127.0.0.1\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Port:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                name: \"port\",\n                value: newServer.port,\n                onChange: handleServerInputChange,\n                placeholder: \"4725\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Max Devices:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                name: \"max_devices\",\n                value: newServer.max_devices,\n                onChange: handleServerInputChange,\n                placeholder: \"5\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"submit-button\",\n              children: \"Add Server\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"servers-list\",\n          children: Object.keys(servers).length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-message\",\n            children: \"No servers configured\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 17\n          }, this) : Object.entries(servers).map(([serverId, serverInfo]) => {\n            var _serverInfo$config;\n            const serverDevices = getDevicesForServer(serverId);\n            const isExpanded = expandedServers[serverId];\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `server-card status-${serverInfo.status}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"server-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: serverInfo.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `server-status ${serverInfo.status}`,\n                  children: serverInfo.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"server-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Host:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 336,\n                    columnNumber: 28\n                  }, this), \" \", ((_serverInfo$config = serverInfo.config) === null || _serverInfo$config === void 0 ? void 0 : _serverInfo$config.host) || \"Unknown\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Port:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 337,\n                    columnNumber: 28\n                  }, this), \" \", serverInfo.port]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"device-count-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Devices:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 339,\n                    columnNumber: 27\n                  }, this), \" \", serverInfo.device_count, \" / \", serverInfo.max_devices, /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: `expand-button ${isExpanded ? 'expanded' : ''}`,\n                    onClick: () => toggleServerExpansion(serverId),\n                    children: isExpanded ? '▼' : '▶'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 340,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 23\n              }, this), isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"server-devices\",\n                children: serverDevices.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"no-devices\",\n                  children: \"No devices assigned to this server\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 29\n                }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"device-list\",\n                  children: serverDevices.map(([deviceId, deviceInfo]) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: `device-item status-${deviceInfo.status}`,\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"device-name\",\n                      children: deviceInfo.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 356,\n                      columnNumber: 35\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `device-status ${deviceInfo.status}`,\n                      children: deviceInfo.status\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 357,\n                      columnNumber: 35\n                    }, this)]\n                  }, deviceId, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 355,\n                    columnNumber: 33\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 25\n              }, this)]\n            }, serverId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Connected Devices\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: refreshDevices,\n              className: \"refresh-button\",\n              children: \"Refresh Devices\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 15\n            }, this), !isAddingDevice ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setIsAddingDevice(true),\n              className: \"add-button\",\n              children: \"Add Device\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setIsAddingDevice(false),\n              className: \"cancel-button\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this), isAddingDevice ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Add New Device\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: addDevice,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"name\",\n                value: newDevice.name,\n                onChange: handleDeviceInputChange,\n                placeholder: \"iPhone 12\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"UDID:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"udid\",\n                value: newDevice.udid,\n                onChange: handleDeviceInputChange,\n                placeholder: \"12345678-1234-1234-1234-123456789012\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Platform:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"platformName\",\n                value: newDevice.platformName,\n                onChange: handleDeviceInputChange,\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"iOS\",\n                  children: \"iOS\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 428,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Android\",\n                  children: \"Android\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 429,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Version:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"platformVersion\",\n                value: newDevice.platformVersion,\n                onChange: handleDeviceInputChange,\n                placeholder: \"14.5\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Device Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"deviceName\",\n                value: newDevice.deviceName,\n                onChange: handleDeviceInputChange,\n                placeholder: \"iPhone\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Automation:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"automationName\",\n                value: newDevice.automationName,\n                onChange: handleDeviceInputChange,\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"XCUITest\",\n                  children: \"XCUITest (iOS)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 462,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"UiAutomator2\",\n                  children: \"UiAutomator2 (Android)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 463,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"submit-button\",\n              children: \"Add Device\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"devices-list\",\n          children: Object.keys(devices).length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-message\",\n            children: \"No devices connected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 17\n          }, this) : Object.entries(devices).map(([deviceId, deviceInfo]) => {\n            const serverInfo = getServerForDevice(deviceInfo);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `device-card status-${deviceInfo.status}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"device-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: deviceInfo.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 480,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `device-status ${deviceInfo.status}`,\n                  children: deviceInfo.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 481,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"device-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"UDID:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 486,\n                    columnNumber: 28\n                  }, this), \" \", deviceId.substring(0, 8), \"...\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 486,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Server:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 487,\n                    columnNumber: 28\n                  }, this), \" \", deviceInfo.server || \"Not assigned\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Last Active:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 488,\n                    columnNumber: 28\n                  }, this), \" \", new Date(deviceInfo.last_active * 1000).toLocaleTimeString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 488,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"device-actions\",\n                children: deviceInfo.status === 'disconnected' ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => initializeDevice(deviceId),\n                  className: \"action-button initialize\",\n                  children: \"Initialize\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 492,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"task-controls\",\n                    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                      value: selectedTask,\n                      onChange: e => setSelectedTask(e.target.value),\n                      className: \"task-select\",\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"open_instagram\",\n                        children: \"Open Instagram\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 503,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"go_to_profile\",\n                        children: \"Go to Profile\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 504,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"scroll_feed\",\n                        children: \"Scroll Feed\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 505,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 498,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      placeholder: \"Repeat interval (sec)\",\n                      value: taskInterval,\n                      onChange: e => setTaskInterval(e.target.value),\n                      className: \"interval-input\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 507,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => executeTask(deviceId),\n                      className: \"action-button\",\n                      disabled: deviceInfo.status !== 'ready',\n                      children: \"Run\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 514,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 497,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 23\n              }, this)]\n            }, deviceId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Running Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tasks-list\",\n          children: Object.keys(tasks).length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-message\",\n            children: \"No tasks running\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 15\n          }, this) : Object.entries(tasks).map(([taskKey, taskInfo]) => {\n            var _devices$taskInfo$dev;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: taskInfo.task_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 546,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"task-device\",\n                  children: [\"Device: \", ((_devices$taskInfo$dev = devices[taskInfo.device_id]) === null || _devices$taskInfo$dev === void 0 ? void 0 : _devices$taskInfo$dev.name) || taskInfo.device_id]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 547,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 545,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Running for:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 552,\n                    columnNumber: 24\n                  }, this), \" \", formatDuration(taskInfo.running_for)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 552,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Interval:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 553,\n                    columnNumber: 24\n                  }, this), \" \", taskInfo.interval, \" seconds\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 553,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-actions\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => stopTask(taskInfo.device_id, taskInfo.task_name),\n                  className: \"action-button stop\",\n                  children: \"Stop Task\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 556,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 555,\n                columnNumber: 19\n              }, this)]\n            }, taskKey, true, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 9\n      }, this), taskResult && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Last Task Result\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setTaskResult(null),\n            className: \"close-button\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-result\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [taskResult.task, \" on \", ((_devices$taskResult$d = devices[taskResult.device]) === null || _devices$taskResult$d === void 0 ? void 0 : _devices$taskResult$d.name) || taskResult.device]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Success:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 582,\n                columnNumber: 19\n              }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n                className: taskResult.result.success ? 'success' : 'error',\n                children: taskResult.result.success ? 'Yes' : 'No'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 583,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 581,\n              columnNumber: 17\n            }, this), taskResult.result.error && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Error:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 588,\n                columnNumber: 22\n              }, this), \" \", taskResult.result.error]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 588,\n              columnNumber: 19\n            }, this), taskResult.result.scheduled && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Task scheduled:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 591,\n                columnNumber: 22\n              }, this), \" Will repeat every \", taskInterval, \" seconds\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), status === 'not_initialized' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"initialize-prompt\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"System is not initialized. Initialize to connect to devices?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: initializeSystem,\n        className: \"initialize-button\",\n        children: \"Initialize System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oP3mRLRsjWcG2q+G8Em0FlcQxAI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE_URL","App","_s","_devices$taskResult$d","status","setStatus","devices","setDevices","servers","setServers","tasks","setTasks","expandedServers","setExpandedServers","newDevice","setNewDevice","name","udid","platformName","platformVersion","deviceName","automationName","newServer","setNewServer","host","port","max_devices","isAddingDevice","setIsAddingDevice","isAddingServer","setIsAddingServer","error","setError","taskResult","setTaskResult","selectedTask","setSelectedTask","taskInterval","setTaskInterval","fetchStatus","interval","setInterval","clearInterval","toggleServerExpansion","serverId","prev","getDevicesForServer","Object","entries","filter","_","deviceInfo","server","response","get","data","err","message","console","initializeSystem","post","initializeDevice","deviceId","refreshDevices","success","detected_devices_count","_err$response","_err$response$data","addDevice","e","preventDefault","_err$response2","_err$response2$data","addServer","parseInt","_err$response3","_err$response3$data","executeTask","payload","task_name","isNaN","repeat_interval","device","task","result","_err$response4","_err$response4$data","stopTask","taskName","_err$response5","_err$response5$data","handleDeviceInputChange","value","target","handleServerInputChange","formatDuration","seconds","minutes","Math","floor","remainingSeconds","getServerForDevice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","onChange","placeholder","required","keys","length","map","serverInfo","_serverInfo$config","serverDevices","isExpanded","config","device_count","substring","Date","last_active","toLocaleTimeString","disabled","taskKey","taskInfo","_devices$taskInfo$dev","device_id","running_for","scheduled","_c","$RefreshReg$"],"sources":["/Users/tristanwaite/Desktop/code/instaram bot ateempt pt 2/instagram-automation/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\n// API base URL\nconst API_BASE_URL = 'http://localhost:8001/api';\n\nfunction App() {\n  // State\n  const [status, setStatus] = useState('loading');\n  const [devices, setDevices] = useState({});\n  const [servers, setServers] = useState({});\n  const [tasks, setTasks] = useState({});\n  const [expandedServers, setExpandedServers] = useState({});\n  const [newDevice, setNewDevice] = useState({\n    name: '',\n    udid: '',\n    platformName: 'iOS',\n    platformVersion: '',\n    deviceName: '',\n    automationName: 'XCUITest'\n  });\n  const [newServer, setNewServer] = useState({\n    name: '',\n    host: '127.0.0.1',\n    port: '',\n    max_devices: 5\n  });\n  const [isAddingDevice, setIsAddingDevice] = useState(false);\n  const [isAddingServer, setIsAddingServer] = useState(false);\n  const [error, setError] = useState(null);\n  const [taskResult, setTaskResult] = useState(null);\n  const [selectedTask, setSelectedTask] = useState('go_to_profile');\n  const [taskInterval, setTaskInterval] = useState('');\n\n  // Fetch system status when component mounts\n  useEffect(() => {\n    fetchStatus();\n    // Poll status every 5 seconds\n    const interval = setInterval(() => {\n      fetchStatus();\n    }, 5000);\n    \n    return () => clearInterval(interval);\n  }, []);\n\n  // Toggle server expansion\n  const toggleServerExpansion = (serverId) => {\n    setExpandedServers(prev => ({\n      ...prev,\n      [serverId]: !prev[serverId]\n    }));\n  };\n\n  // Get devices assigned to a specific server\n  const getDevicesForServer = (serverId) => {\n    return Object.entries(devices).filter(([_, deviceInfo]) => \n      deviceInfo.server === serverId\n    );\n  };\n\n  // Fetch the status from the API\n  const fetchStatus = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/status`);\n      setStatus(response.data.status);\n      setDevices(response.data.devices || {});\n      setServers(response.data.servers || {});\n      setTasks(response.data.tasks || {});\n      setError(null);\n    } catch (err) {\n      setError(`Error fetching status: ${err.message}`);\n      console.error('Error fetching status:', err);\n    }\n  };\n\n  // Initialize the system\n  const initializeSystem = async () => {\n    try {\n      setStatus('initializing');\n      await axios.post(`${API_BASE_URL}/initialize`);\n      await fetchStatus();\n    } catch (err) {\n      setError(`Error initializing system: ${err.message}`);\n      console.error('Error initializing system:', err);\n    }\n  };\n\n  // Initialize a device\n  const initializeDevice = async (deviceId) => {\n    try {\n      await axios.post(`${API_BASE_URL}/devices/${deviceId}/initialize`);\n      await fetchStatus();\n    } catch (err) {\n      setError(`Error initializing device: ${err.message}`);\n      console.error('Error initializing device:', err);\n    }\n  };\n\n  // Refresh devices - scan for new devices and initialize them\n  const refreshDevices = async () => {\n    try {\n      setError(null);\n      const response = await axios.post(`${API_BASE_URL}/refresh`);\n      \n      if (response.data.success) {\n        // Show a temporary success message\n        setError(`${response.data.message} (${response.data.detected_devices_count} devices detected)`);\n        \n        // Refresh the dashboard\n        await fetchStatus();\n      } else {\n        setError(`Error refreshing devices: ${response.data.error || response.data.message}`);\n      }\n    } catch (err) {\n      setError(`Error refreshing devices: ${err.response?.data?.error || err.message}`);\n      console.error('Error refreshing devices:', err);\n    }\n  };\n\n  // Add a new device\n  const addDevice = async (e) => {\n    e.preventDefault();\n    \n    try {\n      await axios.post(`${API_BASE_URL}/devices`, newDevice);\n      setIsAddingDevice(false);\n      setNewDevice({\n        name: '',\n        udid: '',\n        platformName: 'iOS',\n        platformVersion: '',\n        deviceName: '',\n        automationName: 'XCUITest'\n      });\n      await fetchStatus();\n    } catch (err) {\n      setError(`Error adding device: ${err.response?.data?.error || err.message}`);\n      console.error('Error adding device:', err);\n    }\n  };\n\n  // Add a new server\n  const addServer = async (e) => {\n    e.preventDefault();\n    \n    try {\n      await axios.post(`${API_BASE_URL}/servers`, {\n        ...newServer,\n        port: parseInt(newServer.port, 10),\n        max_devices: parseInt(newServer.max_devices, 10)\n      });\n      setIsAddingServer(false);\n      setNewServer({\n        name: '',\n        host: '127.0.0.1',\n        port: '',\n        max_devices: 5\n      });\n      await fetchStatus();\n    } catch (err) {\n      setError(`Error adding server: ${err.response?.data?.error || err.message}`);\n      console.error('Error adding server:', err);\n    }\n  };\n\n  // Execute a task on a device\n  const executeTask = async (deviceId) => {\n    try {\n      setTaskResult(null);\n      \n      const payload = {\n        task_name: selectedTask\n      };\n      \n      // Add repeat interval if provided\n      if (taskInterval && !isNaN(taskInterval) && parseInt(taskInterval) > 0) {\n        payload.repeat_interval = parseInt(taskInterval);\n      }\n      \n      const response = await axios.post(\n        `${API_BASE_URL}/devices/${deviceId}/task`, \n        payload\n      );\n      \n      setTaskResult({\n        device: deviceId,\n        task: selectedTask,\n        result: response.data\n      });\n      \n      await fetchStatus();\n    } catch (err) {\n      setError(`Error executing task: ${err.response?.data?.error || err.message}`);\n      console.error('Error executing task:', err);\n    }\n  };\n\n  // Stop a scheduled task\n  const stopTask = async (deviceId, taskName) => {\n    try {\n      await axios.post(`${API_BASE_URL}/devices/${deviceId}/task/${taskName}/stop`);\n      await fetchStatus();\n    } catch (err) {\n      setError(`Error stopping task: ${err.response?.data?.error || err.message}`);\n      console.error('Error stopping task:', err);\n    }\n  };\n\n  // Handle form input changes for new device\n  const handleDeviceInputChange = (e) => {\n    const { name, value } = e.target;\n    setNewDevice(prev => ({ ...prev, [name]: value }));\n  };\n\n  // Handle form input changes for new server\n  const handleServerInputChange = (e) => {\n    const { name, value } = e.target;\n    setNewServer(prev => ({ ...prev, [name]: value }));\n  };\n\n  // Format time duration\n  const formatDuration = (seconds) => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = Math.floor(seconds % 60);\n    return `${minutes}m ${remainingSeconds}s`;\n  };\n\n  // Get server info for a device\n  const getServerForDevice = (deviceInfo) => {\n    const serverId = deviceInfo.server;\n    return servers[serverId] || null;\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Instagram Automation Dashboard</h1>\n        <div className={`status-indicator status-${status}`}>\n          Status: {status === 'running' ? 'Running' : status === 'loading' ? 'Loading...' : 'Not Initialized'}\n        </div>\n      </header>\n\n      {error && (\n        <div className=\"error-banner\">\n          {error}\n          <button onClick={() => setError(null)}>Dismiss</button>\n        </div>\n      )}\n\n      <div className=\"dashboard-container\">\n        {/* Appium Servers Section */}\n        <div className=\"dashboard-section\">\n          <div className=\"section-header\">\n            <h2>Appium Servers</h2>\n            {!isAddingServer ? (\n              <button onClick={() => setIsAddingServer(true)} className=\"add-button\">\n                Add Server\n              </button>\n            ) : (\n              <button onClick={() => setIsAddingServer(false)} className=\"cancel-button\">\n                Cancel\n              </button>\n            )}\n          </div>\n\n          {isAddingServer ? (\n            <div className=\"form-container\">\n              <h3>Add New Appium Server</h3>\n              <form onSubmit={addServer}>\n                <div className=\"form-group\">\n                  <label>Name:</label>\n                  <input\n                    type=\"text\"\n                    name=\"name\"\n                    value={newServer.name}\n                    onChange={handleServerInputChange}\n                    placeholder=\"server-3\"\n                    required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Host:</label>\n                  <input\n                    type=\"text\"\n                    name=\"host\"\n                    value={newServer.host}\n                    onChange={handleServerInputChange}\n                    placeholder=\"127.0.0.1\"\n                    required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Port:</label>\n                  <input\n                    type=\"number\"\n                    name=\"port\"\n                    value={newServer.port}\n                    onChange={handleServerInputChange}\n                    placeholder=\"4725\"\n                    required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Max Devices:</label>\n                  <input\n                    type=\"number\"\n                    name=\"max_devices\"\n                    value={newServer.max_devices}\n                    onChange={handleServerInputChange}\n                    placeholder=\"5\"\n                    required\n                  />\n                </div>\n                <button type=\"submit\" className=\"submit-button\">Add Server</button>\n              </form>\n            </div>\n          ) : (\n            <div className=\"servers-list\">\n              {Object.keys(servers).length === 0 ? (\n                <div className=\"empty-message\">No servers configured</div>\n              ) : (\n                Object.entries(servers).map(([serverId, serverInfo]) => {\n                  const serverDevices = getDevicesForServer(serverId);\n                  const isExpanded = expandedServers[serverId];\n                  \n                  return (\n                    <div key={serverId} className={`server-card status-${serverInfo.status}`}>\n                      <div className=\"server-header\">\n                        <h3>{serverInfo.name}</h3>\n                        <span className={`server-status ${serverInfo.status}`}>\n                          {serverInfo.status}\n                        </span>\n                      </div>\n                      <div className=\"server-details\">\n                        <p><strong>Host:</strong> {serverInfo.config?.host || \"Unknown\"}</p>\n                        <p><strong>Port:</strong> {serverInfo.port}</p>\n                        <p className=\"device-count-row\">\n                          <strong>Devices:</strong> {serverInfo.device_count} / {serverInfo.max_devices}\n                          <button \n                            className={`expand-button ${isExpanded ? 'expanded' : ''}`}\n                            onClick={() => toggleServerExpansion(serverId)}\n                          >\n                            {isExpanded ? '▼' : '▶'}\n                          </button>\n                        </p>\n                      </div>\n                      {isExpanded && (\n                        <div className=\"server-devices\">\n                          {serverDevices.length === 0 ? (\n                            <p className=\"no-devices\">No devices assigned to this server</p>\n                          ) : (\n                            <ul className=\"device-list\">\n                              {serverDevices.map(([deviceId, deviceInfo]) => (\n                                <li key={deviceId} className={`device-item status-${deviceInfo.status}`}>\n                                  <span className=\"device-name\">{deviceInfo.name}</span>\n                                  <span className={`device-status ${deviceInfo.status}`}>\n                                    {deviceInfo.status}\n                                  </span>\n                                </li>\n                              ))}\n                            </ul>\n                          )}\n                        </div>\n                      )}\n                    </div>\n                  );\n                })\n              )}\n            </div>\n          )}\n        </div>\n\n        {/* Devices Section */}\n        <div className=\"dashboard-section\">\n          <div className=\"section-header\">\n            <h2>Connected Devices</h2>\n            <div className=\"header-buttons\">\n              <button onClick={refreshDevices} className=\"refresh-button\">\n                Refresh Devices\n              </button>\n              {!isAddingDevice ? (\n                <button onClick={() => setIsAddingDevice(true)} className=\"add-button\">\n                  Add Device\n                </button>\n              ) : (\n                <button onClick={() => setIsAddingDevice(false)} className=\"cancel-button\">\n                  Cancel\n                </button>\n              )}\n            </div>\n          </div>\n\n          {isAddingDevice ? (\n            <div className=\"form-container\">\n              <h3>Add New Device</h3>\n              <form onSubmit={addDevice}>\n                <div className=\"form-group\">\n                  <label>Name:</label>\n                  <input\n                    type=\"text\"\n                    name=\"name\"\n                    value={newDevice.name}\n                    onChange={handleDeviceInputChange}\n                    placeholder=\"iPhone 12\"\n                    required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>UDID:</label>\n                  <input\n                    type=\"text\"\n                    name=\"udid\"\n                    value={newDevice.udid}\n                    onChange={handleDeviceInputChange}\n                    placeholder=\"12345678-1234-1234-1234-123456789012\"\n                    required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Platform:</label>\n                  <select\n                    name=\"platformName\"\n                    value={newDevice.platformName}\n                    onChange={handleDeviceInputChange}\n                    required\n                  >\n                    <option value=\"iOS\">iOS</option>\n                    <option value=\"Android\">Android</option>\n                  </select>\n                </div>\n                <div className=\"form-group\">\n                  <label>Version:</label>\n                  <input\n                    type=\"text\"\n                    name=\"platformVersion\"\n                    value={newDevice.platformVersion}\n                    onChange={handleDeviceInputChange}\n                    placeholder=\"14.5\"\n                    required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Device Name:</label>\n                  <input\n                    type=\"text\"\n                    name=\"deviceName\"\n                    value={newDevice.deviceName}\n                    onChange={handleDeviceInputChange}\n                    placeholder=\"iPhone\"\n                    required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Automation:</label>\n                  <select\n                    name=\"automationName\"\n                    value={newDevice.automationName}\n                    onChange={handleDeviceInputChange}\n                    required\n                  >\n                    <option value=\"XCUITest\">XCUITest (iOS)</option>\n                    <option value=\"UiAutomator2\">UiAutomator2 (Android)</option>\n                  </select>\n                </div>\n                <button type=\"submit\" className=\"submit-button\">Add Device</button>\n              </form>\n            </div>\n          ) : (\n            <div className=\"devices-list\">\n              {Object.keys(devices).length === 0 ? (\n                <div className=\"empty-message\">No devices connected</div>\n              ) : (\n                Object.entries(devices).map(([deviceId, deviceInfo]) => {\n                  const serverInfo = getServerForDevice(deviceInfo);\n                  \n                  return (\n                    <div key={deviceId} className={`device-card status-${deviceInfo.status}`}>\n                      <div className=\"device-header\">\n                        <h3>{deviceInfo.name}</h3>\n                        <span className={`device-status ${deviceInfo.status}`}>\n                          {deviceInfo.status}\n                        </span>\n                      </div>\n                      <div className=\"device-details\">\n                        <p><strong>UDID:</strong> {deviceId.substring(0, 8)}...</p>\n                        <p><strong>Server:</strong> {deviceInfo.server || \"Not assigned\"}</p>\n                        <p><strong>Last Active:</strong> {new Date(deviceInfo.last_active * 1000).toLocaleTimeString()}</p>\n                      </div>\n                      <div className=\"device-actions\">\n                        {deviceInfo.status === 'disconnected' ? (\n                          <button onClick={() => initializeDevice(deviceId)} className=\"action-button initialize\">\n                            Initialize\n                          </button>\n                        ) : (\n                          <>\n                            <div className=\"task-controls\">\n                              <select \n                                value={selectedTask} \n                                onChange={(e) => setSelectedTask(e.target.value)}\n                                className=\"task-select\"\n                              >\n                                <option value=\"open_instagram\">Open Instagram</option>\n                                <option value=\"go_to_profile\">Go to Profile</option>\n                                <option value=\"scroll_feed\">Scroll Feed</option>\n                              </select>\n                              <input\n                                type=\"number\"\n                                placeholder=\"Repeat interval (sec)\"\n                                value={taskInterval}\n                                onChange={(e) => setTaskInterval(e.target.value)}\n                                className=\"interval-input\"\n                              />\n                              <button \n                                onClick={() => executeTask(deviceId)} \n                                className=\"action-button\"\n                                disabled={deviceInfo.status !== 'ready'}\n                              >\n                                Run\n                              </button>\n                            </div>\n                          </>\n                        )}\n                      </div>\n                    </div>\n                  );\n                })\n              )}\n            </div>\n          )}\n        </div>\n\n        {/* Running Tasks Section */}\n        <div className=\"dashboard-section\">\n          <div className=\"section-header\">\n            <h2>Running Tasks</h2>\n          </div>\n          \n          <div className=\"tasks-list\">\n            {Object.keys(tasks).length === 0 ? (\n              <div className=\"empty-message\">No tasks running</div>\n            ) : (\n              Object.entries(tasks).map(([taskKey, taskInfo]) => (\n                <div key={taskKey} className=\"task-card\">\n                  <div className=\"task-header\">\n                    <h3>{taskInfo.task_name}</h3>\n                    <span className=\"task-device\">\n                      Device: {devices[taskInfo.device_id]?.name || taskInfo.device_id}\n                    </span>\n                  </div>\n                  <div className=\"task-details\">\n                    <p><strong>Running for:</strong> {formatDuration(taskInfo.running_for)}</p>\n                    <p><strong>Interval:</strong> {taskInfo.interval} seconds</p>\n                  </div>\n                  <div className=\"task-actions\">\n                    <button \n                      onClick={() => stopTask(taskInfo.device_id, taskInfo.task_name)} \n                      className=\"action-button stop\"\n                    >\n                      Stop Task\n                    </button>\n                  </div>\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n\n        {/* Task Result Section */}\n        {taskResult && (\n          <div className=\"dashboard-section\">\n            <div className=\"section-header\">\n              <h2>Last Task Result</h2>\n              <button onClick={() => setTaskResult(null)} className=\"close-button\">×</button>\n            </div>\n            <div className=\"task-result\">\n              <h3>\n                {taskResult.task} on {devices[taskResult.device]?.name || taskResult.device}\n              </h3>\n              <div className=\"result-details\">\n                <p>\n                  <strong>Success:</strong>{' '}\n                  <span className={taskResult.result.success ? 'success' : 'error'}>\n                    {taskResult.result.success ? 'Yes' : 'No'}\n                  </span>\n                </p>\n                {taskResult.result.error && (\n                  <p><strong>Error:</strong> {taskResult.result.error}</p>\n                )}\n                {taskResult.result.scheduled && (\n                  <p><strong>Task scheduled:</strong> Will repeat every {taskInterval} seconds</p>\n                )}\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {status === 'not_initialized' && (\n        <div className=\"initialize-prompt\">\n          <p>System is not initialized. Initialize to connect to devices?</p>\n          <button onClick={initializeSystem} className=\"initialize-button\">\n            Initialize System\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}